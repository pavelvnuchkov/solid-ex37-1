DRY - Все циклы в проекте работают от размера коллекции.
SOLID
Single-responsibility principle - Класс Shop занимается только выбором правильного персонала для клиента и
                                   предоставлением склада с которым сотрудник должен работать.
                                   Класс Warehouse занимается хранение товаров и даёт возможность добавлять и
                                   покупать товары.
                                   Таким образом каждый класс делает только свою работу.

Open closed principle - Мы можем расширять количество товаров которые хранятся на складе (Warehouse)
                        достаточно товару implement Product и тогда склад сможет взаимодействовать с
                        таким типом товаров. Класс Shop может нанимать работников достаточно,
                        что бы работник implement Employee

Liskov substitution principle - Мы не можем CommodityExpert относледовать от Cashier, так как это разные
                                 профессии хоть и схожи.

Dependency inversion principle - В классе CommodityExpert Product помещаем или класс Groceries или PieceGoods и
                                 потом когда вызываем методы объекта Product у каждого своя реализация методов.